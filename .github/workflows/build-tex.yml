name: Build LaTeX Documents with and without Answers
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install TeXLive
        run: |
          # Install TeXLive with minimal profile
          sudo apt-get update
          sudo apt-get install -y texlive-latex-base texlive-latex-extra

      - name: Find all .tex files
        id: find-tex
        run: |
          # Find all .tex files and save their paths as a newline-separated list
          TEX_FILES=$(find . -name "*.tex" -not -path "./.git/*")
          echo "TEX_FILES<<EOF" >> $GITHUB_ENV
          echo "$TEX_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Compile all .tex files (without answers)
        run: |
          # Loop through each .tex file and compile it
          echo "$TEX_FILES" | while read -r file; do
            echo "=== Compiling $file without answers ==="
            # Log the file being compiled
            echo "File: $file"
            # Attempt to compile the file
            if pdflatex -interaction=nonstopmode -output-directory=$(dirname "$file") "$file"; then
              echo "Success: $file compiled without errors."
            else
              echo "Error: Failed to compile $file. Check the log for details."
              # Print the last few lines of the log file for debugging
              LOG_FILE="$(dirname "$file")/$(basename "$file" .tex).log"
              if [ -f "$LOG_FILE" ]; then
                echo "=== Log File Snippet ($LOG_FILE) ==="
                tail -n 20 "$LOG_FILE"
                echo "=== End of Log File Snippet ==="
              else
                echo "No log file found for $file."
              fi
            fi
            echo ""
          done

      - name: Compile all .tex files (with answers)
        run: |
          # Loop through each .tex file and compile it with answers
          echo "$TEX_FILES" | while read -r file; do
            echo "=== Compiling $file with answers ==="
            # Log the file being compiled
            echo "File: $file"
            # Attempt to compile the file with answers
            if pdflatex -interaction=nonstopmode -output-directory=$(dirname "$file") -jobname="$(basename "$file" .tex)_answers" "\newcommand{\printanswers}{1} \input{$file}"; then
              echo "Success: $file compiled with answers without errors."
            else
              echo "Error: Failed to compile $file with answers. Check the log for details."
              # Print the last few lines of the log file for debugging
              LOG_FILE="$(dirname "$file")/$(basename "$file" .tex)_answers.log"
              if [ -f "$LOG_FILE" ]; then
                echo "=== Log File Snippet ($LOG_FILE) ==="
                tail -n 20 "$LOG_FILE"
                echo "=== End of Log File Snippet ==="
              else
                echo "No log file found for $file."
              fi
            fi
            echo ""
          done

      - name: Commit and push PDFs
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Auto-generated PDFs from latest commit"
          git push